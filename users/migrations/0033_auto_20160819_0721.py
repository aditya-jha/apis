# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-08-19 07:21
from __future__ import unicode_literals

from django.db import migrations

def populateSellerAddressData(sellerAddressPtr, selleraddress):
	sellerAddressPtr.address_line = selleraddress["address"]
	sellerAddressPtr.landmark = selleraddress["landmark"]
	sellerAddressPtr.contact_number = selleraddress["contact_number"]
	sellerAddressPtr.pincode_number = selleraddress["pincode"]

	try:
		Pincode = apps.get_model("address", "Pincode")
		pincode = Pincode.objects.get(pincode=selleraddress["pincode"])
		sellerAddressPtr.pincode = pincode
		sellerAddressPtr.city_name = pincode.city.name
		sellerAddressPtr.state_name = pincode.city.state.name
		sellerAddressPtr.country_name = pincode.city.state.country.name
	except Exception as e:
		sellerAddressPtr.city_name = selleraddress["city"]
		sellerAddressPtr.state_name = selleraddress["state"]
		sellerAddressPtr.country_name = "India"

def populateFromSellerAddress(self,sellerAddressPtr):
	self.seller_id = sellerAddressPtr.seller_id
	self.selleraddress = sellerAddressPtr
	self.pincode = sellerAddressPtr.pincode
	self.address_line = sellerAddressPtr.address_line
	self.landmark = sellerAddressPtr.landmark
	self.city_name = sellerAddressPtr.city_name
	self.state_name = sellerAddressPtr.state_name
	self.country_name = sellerAddressPtr.country_name
	self.contact_number = sellerAddressPtr.contact_number
	self.pincode_number = sellerAddressPtr.pincode_number

def create_seller_address_history(apps, schema_editor):

	Seller = apps.get_model("users", "Seller")
	SellerAddress = apps.get_model("users", "SellerAddress")
	SellerAddressHistory = apps.get_model("users", "SellerAddressHistory")

	sellers = Seller.objects.all()
	for sellerPtr in sellers:

		sellerAddressHistoryPtr = SellerAddressHistory.objects.filter(seller=sellerPtr)

		if not sellerAddressHistoryPtr.exists():
			sellerAddressPtr = SellerAddress.objects.filter(seller=sellerPtr)
			if len(sellerAddressPtr) == 0:
				selleraddress["address"] = ""
				selleraddress["landmark"] = ""
				selleraddress["contact_number"] = ""
				selleraddress["pincode"] = ""
				selleraddress["city"] = ""
				selleraddress["state"] = ""
				sellerAddressPtr = SellerAddress(seller=sellerPtr)
				populateSellerAddressData(sellerAddressPtr, selleraddress)
				sellerAddressPtr.save()
			else:
				sellerAddressPtr = sellerAddressPtr[0]

			newSellerAddressHistory = SellerAddressHistory()
			populateFromSellerAddress(newSellerAddressHistory,sellerAddressPtr)
			newSellerAddressHistory.save()


class Migration(migrations.Migration):

	dependencies = [
		('users', '0032_selleraddresshistory'),
		('address', '0002_auto_20160719_2241'),
	]

	operations = [
		migrations.RunPython(create_seller_address_history),
	]